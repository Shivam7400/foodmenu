# Generated by Django 5.0.2 on 2024-02-26 17:04

import ckeditor_uploader.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email_id', models.EmailField(max_length=255, null=True, unique=True, verbose_name='email_id')),
                ('username', models.CharField(blank=True, max_length=1000, null=True)),
                ('full_name', models.CharField(blank=True, max_length=1000, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=10, null=True)),
                ('country', models.CharField(blank=True, max_length=1000, null=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('postal_code', models.IntegerField(blank=True, null=True)),
                ('restaurant_name', models.CharField(blank=True, max_length=1000, null=True)),
                ('restaurant_logo', models.FileField(blank=True, upload_to='restaurant_logo')),
                ('banner_image', models.FileField(blank=True, upload_to='banner_image')),
                ('restaurant_address', models.CharField(blank=True, max_length=3000, null=True)),
                ('city', models.CharField(blank=True, max_length=3000, null=True)),
                ('state', models.CharField(blank=True, max_length=3000, null=True)),
                ('qr_code', models.ImageField(blank=True, upload_to='qr_code')),
                ('payment_status', models.CharField(default='pending', max_length=200)),
                ('payment_price', models.CharField(default='0', max_length=200)),
                ('package', models.CharField(default='pending', max_length=200)),
                ('open_time', models.CharField(blank=True, max_length=100, null=True)),
                ('close_time', models.CharField(blank=True, max_length=100, null=True)),
                ('subscription_date', models.CharField(blank=True, max_length=100, null=True)),
                ('subscritpion_expire_date', models.CharField(blank=True, max_length=100, null=True)),
                ('payment_diable_enable_status', models.CharField(default=False, max_length=200)),
                ('currency', models.CharField(blank=True, max_length=200, null=True)),
                ('table_number_status', models.BooleanField(default=0)),
                ('count1', models.IntegerField(default=0)),
                ('service_fee', models.FloatField(default=0)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Food_Item_Suggestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('food_name', models.CharField(blank=True, max_length=3000, null=True)),
                ('food_type', models.CharField(blank=True, max_length=3000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PrivacyAndPolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='condition')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SubscriptionDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monthly_price', models.FloatField(blank=True, null=True)),
                ('yearly_price', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Termandcondition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='condition')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CategoryImages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='condition')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Adminapp.customuser')),
            ],
        ),
        migrations.CreateModel(
            name='Account_id',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_id', models.CharField(blank=True, max_length=2000, null=True)),
                ('bank_id', models.CharField(blank=True, max_length=2000, null=True)),
                ('status', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Adminapp.customuser')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('sender', models.CharField(blank=True, max_length=200, null=True)),
                ('read', models.BooleanField(default=False)),
                ('status', models.CharField(default='live', max_length=100)),
                ('order_id', models.IntegerField(blank=True, null=True)),
                ('receiver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reciver_user', to='Adminapp.customuser')),
            ],
        ),
        migrations.CreateModel(
            name='Restaurnt_type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('restaurant_type', models.CharField(choices=[('Restaurant', 'Restaurant'), ('Food Truck', 'Food Truck')], max_length=200, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Adminapp.customuser')),
            ],
        ),
        migrations.CreateModel(
            name='subscription_features',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.CharField(blank=True, max_length=500, null=True)),
                ('subscription', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Adminapp.subscriptiondetails')),
            ],
        ),
    ]
